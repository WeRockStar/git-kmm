image: openjdk:11-jdk

variables:
  ANDROID_COMPILE_SDK: "33"
  ANDROID_BUILD_TOOLS: "33.0.1"
  ANDROID_SDK_TOOLS:   "9477386"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  - unzip -d android-sdk-linux android-sdk.zip  
  - rm android-sdk.zip 
  - mkdir android-sdk-latest; pushd android-sdk-latest
  - mkdir cmdline-tools; pushd cmdline-tools
  - mkdir latest
  - popd; popd
  - mv android-sdk-linux/cmdline-tools/* android-sdk-latest/cmdline-tools/latest
  - echo y | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-latest
  - export PATH=$PATH:$PWD/android-sdk-latest/platform-tools/
  - chmod +x ./gradlew
  - set +o pipefail
  - yes | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager --licenses
  - set -o pipefail

stages:      
  - lint
  - test
  - build
  - deploy-dev
  - deploy-uat
  - deploy-prod

linter-android:   
  stage: lint
  script:
    - ./gradlew detekt

linter-ios:   
  stage: lint
  script:
    - echo "Hello, Linter"

unit-test:   
  stage: test    
  script:
    - ./gradlew androidApp:test

build-android:
  stage: build
  script:
    - ./gradlew androidApp:assDe

deploy-dev:    
  stage: deploy-dev
  environment: dev
  tags:
    - m1-runner
  script:
    - echo "Deploying application..."

deploy-uat:    
  stage: deploy-uat
  environment: uat
  script:
    - echo "Deploying application..."
  when: manual

build-uat:    
  stage: deploy-uat
  environment: uat
  needs:
    - job: deploy-uat
  script:
    - echo "Deploying application..."

release-uat:    
  stage: deploy-uat
  environment: uat
  needs:
    - job: build-uat
  script:
    - echo "Deploying application..."

deploy-prod:    
  stage: deploy-prod
  environment: prod
  needs:
    - job: release-uat
  script:
    - echo "Deploying application..."
  when: manual