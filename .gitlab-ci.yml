image: openjdk:11-jdk

variables:
  ANDROID_COMPILE_SDK: "33"
  ANDROID_BUILD_TOOLS: "33.0.1"
  ANDROID_SDK_TOOLS:   "9477386"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  - unzip -d android-sdk-linux android-sdk.zip  
  - rm android-sdk.zip 
  - mkdir android-sdk-latest; cd android-sdk-latest
  - mkdir cmdline-tools; cd cmdline-tools
  - mkdir latest
  - cd ../..
  - mv android-sdk-linux/cmdline-tools/* android-sdk-latest/cmdline-tools/latest
  - echo y | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-latest
  - export PATH=$PATH:$PWD/android-sdk-latest/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-latest/cmdline-tools/latest/bin/sdkmanager --licenses
  - set -o pipefail

stages:          # List of stages for jobs, and their order of execution
  - test
  - build
  - deploy

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - ./gradlew androidApp:test

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - ./gradlew androidApp:assDe

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
