image: jangrewe/gitlab-ci-android

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  ANDROID_APP: "androidApp"
  IOS_APP: "iosApp"

before_script:
  - export GRADLE_USER_HOME=$(pwd)/.gradle

.android:
  before_script:
    - apt update
    - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    - brew install ruby
    - cp $GOOGLE_SERVICE $ANDROID_APP/google-services.json
    - cp $SERVICE_ACCOUNT service-account-beta-deploy.json
    - echo $CI_COMMIT_MESSAGE > release-notes.txt
  after_script:
    - rm $ANDROID_APP/google-services.json
    - rm service-account-beta-deploy.json

stages:      
  - lint
  - test
  - security-scan
  - build
  - deploy-dev
  - deploy-uat
  - deploy-prod

linter-android:   
  stage: lint
  rules:
    - changes: 
        - androidApp
  script:
    - ./gradlew detekt
  tags:
    - linux

linter-ios:   
  stage: lint
  script:
    - echo "Hello, Linter"

unit-test:   
  stage: test
  rules:
    - changes: 
        - androidApp
  script:
    - ./gradlew androidApp:test

build-android:
  stage: build
  extends: .android
  script:
    - gem install bundler
    - brew install fastlane
    # - bundle update
    #- bundle exec fastlane lanes
    - fastlane build
  artifacts:
    paths:
      - androidApp/build/outputs/apk/debug/androidApp-debug.apk

security-android:
  stage: security-scan
  extends: .android
  script:
    - echo "Scanning"

deploy-dev:    
  stage: deploy-dev
  environment: dev
  extends: .android
  needs:
    - job: build-android
      artifacts: true
  script:
    - brew install fastlane
    - fastlane beta

deploy-uat:    
  stage: deploy-uat
  environment: uat
  script:
    - echo "Deploying application..."
  when: manual

build-uat:    
  stage: deploy-uat
  environment: uat
  needs:
    - job: deploy-uat
  script:
    - echo "Deploying application..."

release-uat:    
  stage: deploy-uat
  environment: uat
  needs:
    - job: build-uat
      artifacts: false
    - job: deploy-uat
      artifacts: false
  script:
    - echo "Deploying application..."

deploy-prod:    
  stage: deploy-prod
  environment: prod
  needs:
    - job: release-uat
  script:
    - echo "Deploying application..."
  when: manual